name: Full Build

on:
  push:

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest hypothesis pandas mypy Cython==3.0.11

      # The cythonized files allow installation from the sdist without cython
      - name: Generate cython
        run: |
          chmod +x ./src/rapidfuzz/generate.sh
          ./src/rapidfuzz/generate.sh

      - name: Build sdist
        run: |
          git apply ./tools/sdist.patch
          pip install build
          python -m build --sdist
          # test whether tarball contains all files required for compiling
          pip install dist/rapidfuzz-*.tar.gz -v

      #- name: Test type stubs
      #  # prevent import from rapidfuzz
      #  working-directory: .github
      #  run: |
      #    python -m mypy.stubtest rapidfuzz --ignore-missing-stub

      - name: Test with pytest and backtrace in case of SegFault
        run: |
          tools/seg_wrapper.sh pytest tests

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: dist/*.tar.gz

  build_wheels_windows:
    name: Build wheel on windows-latest/${{matrix.arch}}
    needs: [build_sdist]
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [auto64]
    env:
      CIBW_ARCHS: ${{matrix.arch}}
      CIBW_TEST_SKIP: "*-win32"
      CIBW_BUILD: "cp311-*"
      #CIBW_TEST_REQUIRES: pytest hypothesis pandas
      CIBW_TEST_REQUIRES: pytest hypothesis
      CIBW_TEST_COMMAND: pytest {package}/tests
      CIBW_BUILD_VERBOSITY: 3
      CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact-sdist
          path: dist

      - name: Copy wheel
        run: copy dist/*.tar.gz rapidfuzz.tar.gz

      - uses: actions/setup-python@v5

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        with:
          package-dir: rapidfuzz.tar.gz
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ github.job }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  
